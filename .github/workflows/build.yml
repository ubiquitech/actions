name: Build WAR file and docker image

on:
    workflow_call:
        inputs:
            repo_name:
                type: string
                description: The name of the calling repository
                required: true
            build_number:
                type: string
                description: The build number
                required: true
            build_docker_image:
                type: boolean
                description: Whether to build and upload a docker image
                default: true
                required: false
            push_docker_image:
                type: boolean
                description: Whether to push the built docker image to a container repo
                default: false
                required: false

        secrets:
            SETTINGS_XML:
                required: true
                description: Maven settings.xml file
            ACR_ENDPOINT:
                required: true
                description: Container registry endpoint
            ACR_USERNAME:
                required: true
                description: Container registry username
            ACR_PASSWORD:
                required: true
                description: Container registry password

permissions:
    contents: read
    checks: write # to publish test results

jobs:
    build:
        timeout-minutes: 20
        runs-on: ubuntu-latest
        steps:
            -   name: Dump github context
                run: echo "$GITHUB_CONTEXT"
                shell: bash
                env:
                    GITHUB_CONTEXT: ${{ toJson(github) }}

            -   uses: actions/checkout@v3

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: 17
                    distribution: microsoft
                    cache: maven

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2
                if: inputs.build_docker_image

            -   name: Log into registry
                uses: docker/login-action@v2
                if: inputs.build_docker_image
                with:
                    registry: ${{ secrets.ACR_ENDPOINT }}
                    username: ${{ secrets.ACR_USERNAME }}
                    password: ${{ secrets.ACR_PASSWORD }}

            -   name: Setup settings.xml
                run: echo "${SETTINGS_XML}" >> our-settings.xml
                env:
                    SETTINGS_XML: ${{ secrets.SETTINGS_XML }}

            -   name: Run tests
                run: mvn --batch-mode test -T 1C -s our-settings.xml

            -   name: Deploy maven artifacts to staging repository
                run: mvn --batch-mode deploy -T 1C -s our-settings.xml -P release-deploy -DskipTests -Drevision=${{ inputs.build_number }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: ubiquitech.azurecr.io/${{ inputs.repo_name }}:${{ inputs.build_number }}
                    labels: |
                        build_number=${{ inputs.build_number }}
                    tags: |
                        type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Africa/Johannesburg'}}
                        type=ref,event=branch
                        type=ref,event=pr
                        type=semver,pattern={{version}}
                        type=semver,pattern={{major}}.{{minor}}

            -   name: Build and export docker webapp image
                uses: docker/build-push-action@v4
                if: inputs.build_docker_image
                with:
                    context: webapp
                    build-args: |
                        VERSION=${{ inputs.build_number }}
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    outputs: type=docker,dest=/tmp/${{ inputs.repo_name }}.tar
                    cache-from: type=gha
                    cache-to: type=gha,mode=max

            -   name: Push docker image
                uses: docker/build-push-action@v4
                if: inputs.push_docker_image
                with:
                    push: true
                    context: webapp
                    build-args: |
                        VERSION=${{ inputs.build_number }}
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    cache-from: type=gha
                    cache-to: type=gha,mode=max

            -   name: Upload docker image for tomcat webapp
                uses: actions/upload-artifact@v3
                if: inputs.build_docker_image
                with:
                    name: ${{ inputs.repo_name }}
                    path: /tmp/${{ inputs.repo_name }}.tar

            -   run: echo "${{ inputs.build_number }}" > build_number.txt
            -   uses: actions/upload-artifact@v3
                with:
                    name: build_number
                    path: build_number.txt

            -   name: Publish Test Results
                uses: mikepenz/action-junit-report@v3
                if: always()
                with:
                    check_name: Unit test report
                    report_paths: '**/target/surefire-reports/*.xml'

            -   name: Clean cache
                if: always()
                run: |
                    find ~/.m2/repository/ -name '*.war'
                    find ~/.m2/repository/ -name '*.war' -delete