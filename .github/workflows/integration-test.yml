name: Run integration tests against Docker image

on:
    workflow_call:
        inputs:
            repo_name:
                type: string
                description: The name of the calling repository
                required: true
            requires_elasticsearch:
                type: boolean
                required: false
                description: Whether or not the service requires elasticsearch to be running
                default: false
            suites:
                type: string
                required: true
                description: Stringified JSON list of integration test suites that should be run
        secrets:
            SETTINGS_XML:
                required: true
                description: Maven settings.xml file

permissions:
    contents: read
    checks: write

jobs:
    integration-tests:
        timeout-minutes: 20
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                suite: ${{fromJson(inputs.suites)}}
        steps:
            -   name: Dump github context
                run: echo "$GITHUB_CONTEXT"
                shell: bash
                env:
                    GITHUB_CONTEXT: ${{ toJson(github) }}

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Download docker image
                uses: actions/download-artifact@v2
                with:
                    name: ${{inputs.repo_name}}
                    path: /tmp

            -   name: Run ElasticSearch
                id: elastic_search
                if: $${{inputs.requires_elasticsearch}}
                run:
                    echo "elastic_search_id=$(docker run -d --name elasticsearch  -p 9200:9200  -e discovery.type=single-node -e ES_JAVA_OPTS="-Xms1g -Xmx1g" -e xpack.security.enabled=false docker.elastic.co/elasticsearch/elasticsearch:8.8.0)" >> $GITHUB_OUTPUT

            -   name: Load and run image
                id: load_image
                run: |
                    docker load --input /tmp/${{inputs.repo_name}}.tar
                    docker image ls -a
                    mkdir /tmp/shared-files
                    echo "shared_folder=/tmp/shared-files" >> $GITHUB_OUTPUT
                    echo "container_id=$(docker run -d -p 8080:8080 -v /tmp/shared-files:/data --add-host=host.docker.internal:host-gateway ${{inputs.repo_name}}:latest)" >> $GITHUB_OUTPUT

            # use maven to run the integration tests (faster than building the integration-test-jar-with-dependencies
            -   uses: actions/checkout@v3

            -   name: Set up JDK 21
                uses: actions/setup-java@v3
                with:
                    java-version: 21
                    distribution: microsoft
                    cache: maven

            -   name: Setup settings.xml
                run: echo "${SETTINGS_XML}" >> our-settings.xml
                env:
                    SETTINGS_XML: ${{ secrets.SETTINGS_XML }}

            -   name: Build integration module and dependencies
                run: mvn --batch-mode install  -T 1C -s ./our-settings.xml -DskipTests -pl integration -am

            -   name: Ensure application started up successfully
                run: |
                    curl --fail --silent -I http://localhost:8080/index.html

            -   name: Run integration tests
                working-directory: integration
                run: |
                    mvn test -Dtest=${{ matrix.suite }} -Dit.url=http://localhost:8080 -Dit.runner.host=172.17.0.1 -Dit.file.root=${{ steps.load_image.outputs.shared_folder }}:/data 

            -   name: Publish Test Results
                uses: mikepenz/action-junit-report@v3
                if: always()
                with:
                    check_name: IT tests ${{ matrix.suite }}
                    report_paths: '**/target/surefire-reports/*.xml'

            -   name: Webapp container logs
                if: always()
                run: |
                    docker logs ${{ steps.load_image.outputs.container_id }}
                    
            -   name: Elasticsearch container logs
                if: always()
                run: |
                    docker logs ${{ steps.elastic_search.outputs.elastic_search_id }}

            -   name: Shared files
                if: always()
                run: ls -l ${{ steps.load_image.outputs.shared_folder }}